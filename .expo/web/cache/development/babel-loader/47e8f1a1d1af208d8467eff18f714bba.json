{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\billz\\\\OneDrive\\\\Desktop\\\\resume_tinder\\\\screens\\\\UserSetup.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Constants from \"expo-constants\";\n\nvar _useForm = useForm(),\n    register = _useForm.register,\n    setValue = _useForm.setValue,\n    handleSubmit = _useForm.handleSubmit,\n    control = _useForm.control,\n    reset = _useForm.reset,\n    errors = _useForm.errors;\n\nvar LoadingPage = function (_React$Component) {\n  _inherits(LoadingPage, _React$Component);\n\n  var _super = _createSuper(LoadingPage);\n\n  function LoadingPage() {\n    var _this;\n\n    _classCallCheck(this, LoadingPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onSubmit = function (data) {\n      return console.log(data);\n    };\n\n    _this.onChange = function (value) {\n      return {\n        value: value.nativeEvent.text\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \"First name\"), React.createElement(Controller, {\n        control: control,\n        render: function render(_ref) {\n          var onChange = _ref.onChange,\n              onBlur = _ref.onBlur,\n              value = _ref.value;\n          return React.createElement(TextInput, {\n            style: styles.input,\n            onBlur: onBlur,\n            onChangeText: function onChangeText(value) {\n              return onChange(value);\n            },\n            value: value,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 11\n            }\n          });\n        },\n        name: \"firstName\",\n        rules: {\n          required: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, \"Last name\"), React.createElement(Controller, {\n        control: control,\n        render: function render(_ref2) {\n          var onChange = _ref2.onChange,\n              onBlur = _ref2.onBlur,\n              value = _ref2.value;\n          return React.createElement(TextInput, {\n            style: styles.input,\n            onBlur: onBlur,\n            onChangeText: function onChangeText(value) {\n              return onChange(value);\n            },\n            value: value,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }\n          });\n        },\n        name: \"lastName\",\n        rules: {\n          required: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return LoadingPage;\n}(React.Component);\n\nexport { LoadingPage as default };\nvar styles = StyleSheet.create({\n  label: {\n    color: 'white',\n    margin: 20,\n    marginLeft: 0\n  },\n  button: {\n    marginTop: 40,\n    color: 'white',\n    height: 40,\n    backgroundColor: '#ec5990',\n    borderRadius: 4\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    backgroundColor: '#0e101c'\n  },\n  input: {\n    backgroundColor: 'white',\n    borderColor: 'none',\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["C:/Users/billz/OneDrive/Desktop/resume_tinder/screens/UserSetup.tsx"],"names":["React","TextInput","useForm","Controller","Constants","register","setValue","handleSubmit","control","reset","errors","LoadingPage","onSubmit","data","console","log","onChange","value","nativeEvent","text","styles","container","label","onBlur","input","required","button","Component","StyleSheet","create","color","margin","marginLeft","marginTop","height","backgroundColor","borderRadius","flex","justifyContent","paddingTop","statusBarHeight","padding","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n\tStyleSheet,\r\n\tText,\r\n    View,\r\n    TouchableOpacity,\r\n    Button,\r\n    TouchableHighlight\r\n} from 'react-native';\r\nimport firebase from 'firebase';\r\nimport {\r\n    NavigationScreenProp,\r\n    NavigationState,\r\n    NavigationParams,\r\n} from 'react-navigation';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n//import t from 'tcomb-form-native';\r\nimport DocumentPicker from 'react-native-document-picker';\r\n//import {createForm, formShape} from 'rc-form';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constants from \"expo-constants\";\r\n\r\ninterface Props {\r\n    navigation: NavigationScreenProp<NavigationState, NavigationParams>\r\n}\r\n\r\nconst { register, setValue, handleSubmit, control, reset, errors } = useForm();\r\n\r\nexport default class LoadingPage extends React.Component<Props> {  \r\n    \r\n    onSubmit = (data:any) => console.log(data);\r\n    onChange = (value:any) => {\r\n        return {\r\n            value: value.nativeEvent.text\r\n        };\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>First name</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={value => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"firstName\"\r\n        rules={{ required: true }}\r\n      />\r\n      <Text style={styles.label}>Last name</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={value => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"lastName\"\r\n        rules={{ required: true }}\r\n      />\r\n\r\n      <View>\r\n          <TouchableOpacity style={styles.button}\r\n          onPress={this.onSubmit}>\r\n            <Text style={styles.label}>Submit</Text>\r\n          </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    label: {\r\n      color: 'white',\r\n      margin: 20,\r\n      marginLeft: 0,\r\n    },\r\n    button: {\r\n      marginTop: 40,\r\n      color: 'white',\r\n      height: 40,\r\n      backgroundColor: '#ec5990',\r\n      borderRadius: 4,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      paddingTop: Constants.statusBarHeight,\r\n      padding: 8,\r\n      backgroundColor: '#0e101c',\r\n    },\r\n    input: {\r\n      backgroundColor: 'white',\r\n      borderColor: 'none',\r\n      height: 40,\r\n      padding: 10,\r\n      borderRadius: 4,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}