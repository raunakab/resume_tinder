{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\billz\\\\OneDrive\\\\Desktop\\\\resume_tinder\\\\screens\\\\LoadingPage.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar LoadingPage = function (_React$Component) {\n  _inherits(LoadingPage, _React$Component);\n\n  var _super = _createSuper(LoadingPage);\n\n  function LoadingPage() {\n    var _this;\n\n    _classCallCheck(this, LoadingPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.checkIfLoggedIn = function () {};\n\n    return _this;\n  }\n\n  _createClass(LoadingPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkIfLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \"LoadingPage\"));\n    }\n  }]);\n\n  return LoadingPage;\n}(React.Component);\n\nexport { LoadingPage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/billz/OneDrive/Desktop/resume_tinder/screens/LoadingPage.tsx"],"names":["React","LoadingPage","checkIfLoggedIn","styles","container","Component","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;IAiBqBC,W;;;;;;;;;;;;;;;;UAKjBC,e,GAAkB,YAAM,CAQvB,C;;;;;;;wCAZmB;AAChB,WAAKA,eAAL;AACH;;;6BAWQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGC,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKH;;;;EApBoCJ,KAAK,CAACK,S;;SAA1BJ,W;AAuBrB,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE;AAHT;AADkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n\tStyleSheet,\r\n\tText,\r\n\tView,\r\n} from 'react-native';\r\nimport firebase from 'firebase';\r\nimport {\r\n    NavigationScreenProp,\r\n    NavigationState,\r\n    NavigationParams,\r\n} from 'react-navigation';\r\n\r\ninterface Props {\r\n    navigation: NavigationScreenProp<NavigationState, NavigationParams>\r\n}\r\n\r\nexport default class LoadingPage extends React.Component<Props> {\r\n    componentDidMount() {\r\n        this.checkIfLoggedIn();\r\n    }\r\n\r\n    checkIfLoggedIn = () => {\r\n        // firebase.auth().onAuthStateChanged(user => {\r\n        //     if (user) {\r\n        //         // this.props.navigation.navigate('Dashboard');\r\n        //     } else {\r\n        //         this.props.navigation.navigate('LoginPage');\r\n        //     }\r\n        // });\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={ styles.container } >\r\n                <Text>LoadingPage</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}